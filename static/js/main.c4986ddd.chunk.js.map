{"version":3,"sources":["components/Stats.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","label","percentage","className","defaultProps","getRandomColor","color","i","Math","floor","random","App","statistics","map","element","style","backgroundColor","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ggBAGA,SAASA,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACvB,OACC,qCACC,sBAAMC,UAAU,QAAhB,SAAyBF,IACzB,uBAAME,UAAU,aAAhB,UAA8BD,EAA9B,UAKHF,EAAMI,aAAe,GAONJ,QCSf,SAASK,IAGR,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACtBD,GAHa,mBAGIE,KAAKC,MAAsB,GAAhBD,KAAKE,WAElC,OAAOJ,EAGOK,MA/Bf,WACC,OACC,qBAAKR,UAAU,MAAf,SACC,0BAASA,UAAU,aAAnB,UACC,oBAAIA,UAAU,QAAd,0BAEA,oBAAIA,UAAU,YAAd,SACES,EAAWC,KAAI,SAAAC,GAAO,OACtB,oBAECX,UAAU,OACVY,MAAO,CAAEC,gBAAiBX,KAH3B,SAKC,cAAC,EAAD,CAAOJ,MAAOa,EAAQb,MAAOC,WAAYY,EAAQZ,cAJ5CY,EAAQG,eCHLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c4986ddd.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Stats({ label, percentage }) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className=\"label\">{label}</span>\r\n\t\t\t<span className=\"percentage\">{percentage}%</span>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nStats.defaultProps = {};\r\n\r\nStats.propTypes = {\r\n\tlabel: PropTypes.string.isRequired,\r\n\tpercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Stats;\r\n","import 'modern-normalize/modern-normalize.css';\nimport './App.css';\nimport './components/Stats.scss';\nimport statistics from './statistical-data.json';\nimport Stats from './components/Stats';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<section className=\"statistics\">\n\t\t\t\t<h2 className=\"title\">Upload stats</h2>\n\n\t\t\t\t<ul className=\"stat-list\">\n\t\t\t\t\t{statistics.map(element => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={element.id}\n\t\t\t\t\t\t\tclassName=\"item\"\n\t\t\t\t\t\t\tstyle={{ backgroundColor: getRandomColor() }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Stats label={element.label} percentage={element.percentage} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nfunction getRandomColor() {\n\tvar letters = '0123456789ABCDEF';\n\tvar color = '#';\n\tfor (var i = 0; i < 6; i++) {\n\t\tcolor += letters[Math.floor(Math.random() * 16)];\n\t}\n\treturn color;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}